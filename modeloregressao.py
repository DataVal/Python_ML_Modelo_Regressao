# -*- coding: utf-8 -*-
"""modeloRegressao.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ByGCXhVLoTyJzG62tpaUtXaStrgIYKi1
"""

# Importando bibliotecas necessárias
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Carregando o conjunto de dados
path = "/content/Automobile_data.csv"
df = pd.read_csv(path)

# Limpeza de dados: converter 'price' e 'horsepower' para valores numéricos
df['price'] = pd.to_numeric(df['price'], errors='coerce')
df.dropna(subset=['price'], inplace=True)
df['horsepower'] = pd.to_numeric(df['horsepower'], errors='coerce')
df.dropna(subset=['horsepower'], inplace=True)

# Convertendo 'price' e 'horsepower' para float
df['price'] = df['price'].astype(float)
df['horsepower'] = df['horsepower'].astype(float)

# Criando a coluna logPrice
df['logPrice'] = np.log(df['price'])

# Criando o array Numpy para as variáveis independentes
valores = df[['engine-size', 'horsepower', 'city-mpg', 'highway-mpg']].to_numpy()

# Normalizando os dados
medias = np.mean(valores, axis=1, keepdims=True)
std = np.std(valores, axis=1, keepdims=True)
X = (valores - medias) / std

# Criando a variável dependente
y = df['logPrice'].to_numpy()

# Dividindo os dados em conjunto de treinamento e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=1)

# Ajustando o modelo de regressão linear
reg = LinearRegression().fit(X_train, y_train)

# Fazendo previsões no conjunto de teste
pred = reg.predict(X_test)

# Avaliando o modelo
mae = mean_absolute_error(y_test, pred)
mse = mean_squared_error(y_test, pred)
rmse = mse ** 0.5
r2 = r2_score(y_test, pred)

# Exibindo os resultados
print(f"Erro Médio Absoluto (MAE): {mae}")
print(f"Erro Quadrático Médio (MSE): {mse}")
print(f"Raiz do Erro Quadrático Médio (RMSE): {rmse}")
print(f"R² do conjunto de teste: {r2}")